{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "description": "Renovate configuration optimized for immediate notifications and security",
  "extends": [
    "config:recommended",
    ":semanticCommits",
    ":dependencyDashboard",
    ":ignoreModulesAndTests",
    "security:openssf-scorecard"
  ],
  "timezone": "UTC",
  "schedule": null,
  "prConcurrentLimit": 10,
  "branchConcurrentLimit": 10,
  "prHourlyLimit": 0,
  "minimumReleaseAge": null,
  "internalChecksFilter": "strict",
  "osvVulnerabilityAlerts": true,
  "separateMinorPatch": false,
  "separateMajorMinor": true,
  "separateMultipleMajor": true,
  "rangeStrategy": "pin",
  "semanticCommitType": "chore",
  "semanticCommitScope": "deps",
  "commitMessagePrefix": "chore(deps): ",
  "commitMessageAction": "update",
  "commitMessageTopic": "{{depName}}",
  "commitMessageExtra": "to {{newVersion}}",
  "prTitle": "{{commitMessage}} {{#if isPinDigest}}(digest){{/if}}",
  "prBodyTemplate": "This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---------|------|--------|---------|\n{{#each upgrades as |upgrade|}}\n| {{upgrade.depName}} | {{upgrade.depType}} | {{upgrade.updateType}} | `{{upgrade.currentVersion}}` -> `{{upgrade.newVersion}}` |\n{{/each}}\n\n---\n\n### Release Notes\n{{#each upgrades as |upgrade|}}\n{{#if upgrade.hasReleaseNotes}}\n<details>\n<summary>{{upgrade.depName}}</summary>\n{{upgrade.releaseNotes}}\n</details>\n{{/if}}\n{{/each}}\n\n### Configuration\n\nðŸ“… **Schedule**: At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Enabled for patch-level updates and security patches.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted.\n\nðŸ”• **Ignore**: Close this PR and you won't be reminded about {{#if isSingleUpdate}}this update{{else}}these updates{{/if}} again.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://github.com/renovatebot/renovate).",
  "labels": ["dependencies"],
  "assigneesFromCodeOwners": true,
  "reviewersFromCodeOwners": true,
  "lockFileMaintenance": {
    "enabled": true,
    "schedule": null,
    "recreateWhen": "always",
    "commitMessageAction": "update",
    "prTitle": "chore(deps): update lockfile"
  },
  "packageRules": [
    {
      "description": "Automerge non-major updates for production dependencies",
      "matchDepTypes": ["dependencies"],
      "matchUpdateTypes": ["minor", "patch"],
      "automerge": true,
      "automergeType": "pr",
      "automergeStrategy": "squash",
      "platformAutomerge": true,
      "requiredStatusChecks": null
    },
    {
      "description": "Automerge patch updates for development dependencies",
      "matchDepTypes": ["dev-dependencies"],
      "matchUpdateTypes": ["patch"],
      "automerge": true,
      "automergeType": "pr",
      "automergeStrategy": "squash",
      "platformAutomerge": true,
      "requiredStatusChecks": null
    },
    {
      "description": "Automerge security updates immediately",
      "matchDepTypes": ["dependencies", "dev-dependencies"],
      "matchUpdateTypes": ["patch", "minor"],
      "isVulnerabilityAlert": true,
      "automerge": true,
      "automergeType": "pr",
      "automergeStrategy": "squash",
      "platformAutomerge": true,
      "requiredStatusChecks": null,
      "labels": ["security", "dependencies"],
      "prPriority": 10
    },
    {
      "description": "Manual review for major updates",
      "matchDepTypes": ["dependencies", "dev-dependencies"],
      "matchUpdateTypes": ["major"],
      "automerge": false,
      "labels": ["major-update", "dependencies"],
      "prPriority": 5,
      "reviewers": ["matfax"]
    },
    {
      "description": "Group Python ecosystem updates for better review",
      "matchPackageNames": [
        "pytest",
        "pytest-asyncio",
        "pytest-cov",
        "pytest-mock",
        "mypy",
        "types-*",
        "black",
        "ruff",
        "bandit"
      ],
      "groupName": "Python testing and linting tools",
      "matchUpdateTypes": ["minor", "patch"],
      "automerge": true,
      "automergeType": "pr",
      "automergeStrategy": "squash",
      "platformAutomerge": true
    },
    {
      "description": "Group MCP related updates",
      "matchPackageNames": ["mcp", "mcp-*"],
      "groupName": "MCP packages",
      "automerge": false,
      "labels": ["mcp", "dependencies"],
      "prPriority": 8
    },
    {
      "description": "High priority for Docker-related dependencies",
      "matchPackageNames": ["docker", "docker-*"],
      "labels": ["docker", "dependencies"],
      "prPriority": 7,
      "automerge": false
    },
    {
      "description": "Pin GitHub Actions to specific commits for security",
      "matchManagers": ["github-actions"],
      "rangeStrategy": "pin",
      "pinDigests": true,
      "automerge": true,
      "automergeType": "pr",
      "automergeStrategy": "squash",
      "platformAutomerge": true,
      "labels": ["github-actions", "dependencies"]
    }
  ],
  "python": {
    "ignorePaths": [
      "**/tests/fixtures/**"
    ]
  },
  "pip_setup": {
    "enabled": false
  },
  "pep621": {
    "enabled": true
  }
}